version: '3.8'

services:
    web:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        container_name: django-celery-model-dev
        command: /start
        volumes:
            - .:/app
        ports:
            - "8080:8000"
        env_file:
            - ./.env
        depends_on:
            - db
            - redis

    db:
        image: postgres:12.0-alpine
        container_name: postgres-celery-model-dev
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - "5432:5432"

    redis:
        image: redis:6.0.9-alpine
        container_name: redis-celery-model-dev
        ports:
            - "6379:6379"

    celery_worker:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        container_name: celery-worker-celery-model-dev
        command: /start-celeryworker
        volumes:
            - .:/app
        env_file:
            - ./.env
        depends_on:
            - db
            - redis

    celery_beat:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        container_name: celery-beat-celery-model-dev
        command: /start-celerybeat
        volumes:
            - .:/app
        env_file:
            - ./.env
        depends_on:
            - db
            - redis

    flower:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        container_name: flower-celery-model-dev
        command: /start-flower
        volumes:
            - .:/app
        env_file:
            - ./.env
        ports:
            - "5555:5555"
        depends_on:
            - db
            - redis
            - celery_worker

volumes:
    postgres_data:
